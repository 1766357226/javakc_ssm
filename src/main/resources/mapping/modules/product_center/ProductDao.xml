<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhg.javakc.modules.product_center.products.dao.ProDao">

   <resultMap id="goodsSpan" type="com.zhg.javakc.modules.product_center.products.entity.Producte">
      <id property="goodsId" column="goods_ID" />
      <result property="goodsName" column="goods_NAME" />
      <result property="goodsNumber" column="goods_number" />
      <result property="viewPrice" column="goods_view_price" />
      <result property="goodsPrice" column="goods_price" />
      <result property="realPrice" column="goods_real_price" />
      <result property="goodsDescripte" column="GOODS_DESCRIBTION"/>
      <result property="proTime" column="pro_time" />
      <result property="ifHexchange" column="GOODS_IFHEXCHANGE" />
      <result property="goodsSum" column="GOODS_SUM" />
      <result property="storageCondition" column="GOODS_STORAGE_CONDITION" />
      <result property="goodsBrand" column="GOODS_BRAND" />
      <result property="goodsSavetime" column="GOODS_SAVE_TIME" />
      <result property="goodsAddress" column="GOODS_ADDRESS" />
      <result property="goodsPackage" column="GOODS_PACEING" />
      <result property="goodsWater" column="GOODS_WATER" />
      <result property="goodsUnit" column="GOODS_UNIT" />
      <result property="goodsWeight" column="GOODS_WEIGHT"/>
      <result property="goodsSales" column="GOODS_SALES"/>
      <result property="goodsStatus" column="GOODS_STATUS"/>
      <result property="goodsSearch" column="GOODS_SEARCH"/>
      <result property="typeId" column="TYPE_ID"/>
      <result property="articleId" column="ARTICLE_ID"/>
      <result property="supId" column="SUP_ID"/>
       <result property="articleName" column="article_name"/>
       <result property="typeName" column="type_name"/>
       <result property="supName" column="sup_name"/>
       <result property="artTypeName" column="article_type_name"/>
      <collection property="spanList" column="span_id" javaType="ArrayList" ofType="String">
         <result column="span_ID" />
      </collection>
   </resultMap>

        <sql id="allColumn">
    	   c.goods_id,c.goods_name,c.goods_number, c.goods_view_price, c.goods_price,c.goods_real_price,
           c.GOODS_DESCRIBTION, c.PRO_TIME, c.GOODS_IFHEXCHANGE, c.GOODS_SUM,c.GOODS_STORAGE_CONDITION,
           c.GOODS_BRAND, c.GOODS_SAVE_TIME,c.GOODS_ADDRESS,c.GOODS_PACEING,
           c.GOODS_WATER,c.GOODS_UNIT,c.GOODS_WEIGHT,c.GOODS_SALES,
           c.GOODS_STATUS,c.GOODS_SEARCH,c.TYPE_ID,c.ARTICLE_ID,c.SUP_ID
       </sql>

        <select id="findList" resultMap="goodsSpan">
           SELECT <include refid="allColumn"></include>,gs.span_Name as SPAN_ID,a.article_name ,t.type_name ,s.sup_name,st.article_type_name  from
           CS_GOODS c,cs_articles a, cs_good_span gs, goods_type t,cs_goods_span cs, cs_supplier s,cs_articles_type st
           <where>
           c.GOODS_id=cs.goods_id
           and cs.span_id=gs.span_id
           and c.article_id=a.article_id
           and a.article_type_id=st.article_type_id
           and c.type_id=t.type_id
           and c.sup_id=s.sup_id
           </where>
        </select>


    <insert id="insert">
		INSERT INTO CS_GOODS
		 ( GOODS_ID,GOODS_NAME,GOODS_NUMBER,GOODS_VIEW_PRICE,GOODS_PRICE,GOODS_REAL_PRICE,
           GOODS_DESCRIBTION,PRO_TIME,GOODS_IFHEXCHANGE,GOODS_SUM,GOODS_STORAGE_CONDITION,
           GOODS_BRAND,GOODS_SAVE_TIME,GOODS_ADDRESS,GOODS_PACEING,
           GOODS_WATER,GOODS_UNIT,GOODS_WEIGHT,GOODS_SALES,
           GOODS_STATUS,GOODS_SEARCH,TYPE_ID,ARTICLE_ID,SUP_ID)
		 VALUES
			(#{goodsId},#{goodsName},#{goodsNumber},#{viewPrice},#{goodsPrice},#{realPrice},#{goodsDescripte},
			#{proTime},#{ifHexchange},#{goodsSum},#{storageCondition},#{goodsBrand},#{goodsSavetime},
			#{goodsAddress},#{goodsPackage},#{goodsWater},#{goodsUnit},#{goodsWeight},#{goodsSales},#{goodsStatus},
			#{goodsStatus},#{goodsSearch},#{typeId},#{articleId},#{supId})
	</insert>
   <insert id="insertRelation" parameterType="Map">
      INSERT INTO CS_GOODS_SPAN(GOODS_ID, SPAN_ID) VALUES(#{goodsId},#{spanId})
      <!-- 		 INSERT INTO DATA_USER_ROLE(USER_ID, ROLE_ID)  -->
      <!-- 		 SELECT #{userId}, RID FROM -->
      <!-- 	    <foreach collection="roleIds" item="id" open="(" separator="UNION ALL" close=")"> -->
      <!-- 	    	<![CDATA[ -->
      <!-- 		    	SELECT ROLE_ID AS RID FROM DATA_ROLE WHERE ROLE_ID = #{id} -->
      <!-- 		    ]]> -->
      <!-- 	    </foreach> -->
   </insert>

   <select id="get" resultMap="goodsSpan">
      SELECT <include refid="allColumn"></include>,gs.span_id,a.article_name ,t.type_name ,s.sup_name,st.article_type_name from
      CS_GOODS c,cs_articles a,cs_good_span gs,goods_type t,cs_goods_span cs,cs_supplier s,cs_articles_type st
      <where>
      c.goods_id=cs.goods_id
      and cs.span_id=gs.span_id
      and c.article_id=a.article_id
      and a.article_type_id=st.article_type_id
      and c.type_id=t.type_id
      and c.sup_id=s.sup_id
      and c.goods_id=#{0}
      </where>
   </select>

   <update id="update">
		UPDATE CS_GOODS
		SET
		   GOODS_NAME = #{goodsName}, GOODS_NUMBER = #{goodsNumber},GOODS_VIEW_PRICE=#{viewPrice}, GOODS_PRICE=#{goodsPrice},
		   GOODS_REAL_PRICE=#{realPrice}, GOODS_DESCRIBTION=#{goodsDescribe}, PRO_TIME=#{proTime},
           GOODS_IFHEXCHANGE=#{ifHexchange}, GOODS_SUM=#{goodsSum},GOODS_STORAGE_CONDITION=#{storageCondition},
           GOODS_BRAND=#{goodsBrand},GOODS_SAVE_TIME=#{goodsSavetime},GOODS_ADDRESS=#{goodsAddress},GOODS_PACEING=#{goodsPackage},
           GOODS_WATER=#{goodsWater},GOODS_UNIT=#{goodsUnit},GOODS_WEIGHT=#{goodsWeight},GOODS_SALES=#{goodsSales},
           GOODS_STATUS=#{goodsStatus},GOODS_SEARCH=#{goodsSearch},TYPE_ID=#{typeId},ARTICLE_ID=#{articleId},SUP_ID=#{supId}
        WHERE GOODS_ID = #{goodsId}
	</update>
    <update id="updateStatus">
        update cs_goods set goods_Status=2 where goods_id=#{0}
    </update>

   <delete id="delete" parameterType="java.lang.String">
      <![CDATA[
	       DELETE FROM CS_GOODS WHERE GOODS_ID IN
	    ]]>
      <foreach collection="array" item="id" open="(" separator="," close=")">
         #{id}
      </foreach>
   </delete>

   <delete id="deleteRelation">
		DELETE FROM CS_GOODS_SPAN WHERE GOODS_ID = #{id}
	</delete>


</mapper>